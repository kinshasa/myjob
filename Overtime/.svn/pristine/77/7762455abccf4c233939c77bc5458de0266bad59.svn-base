
//定义变量
var _user_data;
var _user_singleid;
var _user_genid;
var _user_name;
var _user_pswd;
var _user_id;
var _user_time_start;
var _user_time_end;
var _user_time_hours;
var _user_time_work;
var _user_work_reson;
var _user_mouth_currenthours;
var _user_mouth_lasthours;
var _user_id_text;
    
var _is_exist=false; /*判断用户是否已经登记信息*/
var is_edit=false;

$(function(){ 
    //加载页面
    $("input[type=button],button").button();//.corner("10px");
    //$("#dialog-creat,#dialog-login").css({"display":"none"});
    //显示时间
    showTime();
    //清空表格
    $("input[type=text],textarea").val("");
    //设置button位置
    $("#submit").css({
        "margin-left":$("table").width()/8+"px"//-$("button").width()
    });
    $("#check").css({
        "width":"\""+$("button").width()+"\""+"px",
        "margin-left":$("table").width()/4+"px"
    });

    //设置选择时间项目
    (function( $ ) {
        $.widget( "ui.combobox", {
            _create: function() {
                var input,
                that = this,
                select = this.element.hide(),
                selected = select.children( ":selected" ),
                value = selected.val() ? selected.text() : "",
                wrapper = this.wrapper = $( "<span>" )
                .addClass( "ui-combobox" )
                .insertAfter( select );

                function removeIfInvalid(element) {
                    var value = $( element ).val(),
                    matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( value ) + "$", "i" ),
                    valid = false;
                    select.children( "option" ).each(function() {
                        if ( $( this ).text().match( matcher ) ) {
                            this.selected = valid = true;
                            return false;
                        }
                    });
                
                    if ( !valid ) {
                        //if ( 0 ) {
                        // remove invalid value, as it didn't match anything
                        $( element )
                        .val( "" )
                        .attr( "title", value + " didn't match any item" )
                        .tooltip( "open" );
                        select.val( "" );
                        setTimeout(function() {
                            input.tooltip( "close" ).attr( "title", "" );
                        }, 2500 );
                        input.data( "autocomplete" ).term = "";
                        return false;
                    }
                             
                }

                input = $( "<input>" )
                .appendTo( wrapper )
                .val( value )
                .attr( "title", "" )
                .addClass( "ui-state-default ui-combobox-input" )
                .autocomplete({
                    delay: 0,
                    minLength: 0,
                    source: function( request, response ) {
                        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
                        response( select.children( "option" ).map(function() {
                            var text = $( this ).text();
                            if ( this.value && ( !request.term || matcher.test(text) ) )
                                return {
                                    label: text.replace(
                                        new RegExp(
                                            "(?![^&;]+;)(?!<[^<>]*)(" +
                                            $.ui.autocomplete.escapeRegex(request.term) +
                                            ")(?![^<>]*>)(?![^&;]+;)", "gi"
                                            ), "<strong>$1</strong>" ),
                                    value: text,
                                    option: this
                                };
                        }) );
                    },
                    select: function( event, ui ) {
                        ui.item.option.selected = true;
                        that._trigger( "selected", event, {
                            item: ui.item.option
                        });
                    },
                    change: function( event, ui ) {
                        if ( !ui.item )
                            return removeIfInvalid( this );
                    }
                })
                .addClass( "ui-widget ui-widget-content ui-corner-left" );

                input.data( "autocomplete" )._renderItem = function( ul, item ) {
                    return $( "<li>" )
                    .data( "item.autocomplete", item )
                    .append( "<a>" + item.label + "</a>" )
                    .appendTo( ul );
                };

                $( "<a>" )
                .attr( "tabIndex", -1 )
                .attr( "title", "Show All Items" )
                .tooltip()
                .appendTo( wrapper )
                .button({
                    icons: {
                        primary: "ui-icon-triangle-1-s"
                    },
                    text: false
                })
                .removeClass( "ui-corner-all" )
                .addClass( "ui-corner-right ui-combobox-toggle" )
                .click(function() {
                    // close if already visible
                    if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
                        input.autocomplete( "close" );
                        removeIfInvalid( input );
                        return;
                    }
                    // work around a bug (likely same cause as #5265)
                    $( this ).blur();
                    // pass empty string as value to search for, displaying all results
                    input.autocomplete( "search", "" );
                    input.focus();
                });

                input
                .tooltip({
                    position: {
                        of: this.button
                    },
                    tooltipClass: "ui-state-highlight"
                });
            },

            destroy: function() {
                this.wrapper.remove();
                this.element.show();
                $.Widget.prototype.destroy.call( this );
            }
        });
    })( jQuery );
    $( "#user_week,#user_start,#user_end" ).combobox();
    

    //处理登录注册
    var creat_name = $( "#name" ),
    creat_genid = $( "#genid" ),
    creat_single = $( "#single" ),
    //creat_email = $( "#email" ),
    creat_password = $( "#password" ),
    loginFields = $( [] ).add( creat_name ).add( creat_genid ).add( creat_single ).add( creat_password ),//定义对象包，返回Jquery类型
    tips = $( ".validateTips" );
    
    //init data
    //get _user_id_text html value;
    _user_id_text =$(".validateTips2").html();
    
    $( "#dialog-login" ).dialog({
        hide:false,   
        resizable:false,
        autoOpen: true,//false,
        height: 'auto',//firefox:400,
        width: 350,//firefox:300,
        modal: true,//true,
        position : ['top','right'] ,
        buttons: {
            "Login": function() {
                $.post("method/mysql_login.php", {
                    genidlg:$("#genidlg").val(),
                    passwordlg:$("#passwordlg").val()
                }, function (logindata){
                    if(logindata != false){//login success
                        //login success and init static value
                        _user_data=logindata.split("~");
                        alert(_user_data[0]+_user_data[1]);
                        _user_genid=$("#genidlg").val(),
                        _user_name = _user_data[0];
                        _user_singleid = _user_data[1];
                        _user_pswd = $("#passwordlg").val();
                        //自动填写表格
                        form_init();
                        $("#dlogin").html("<a><font color = red;>"+$( "#namelg" ).val()+"</font></a><a id=\"alayout\" style=\"color:red\" href=\"##\">[登出]</a>");

                        $( "#dialog-login" ).dialog( "close" );
                        $.post("method/init.php",function (initdata){
                            if(initdata=="1"){
                                _is_exist = true;
                                data_is_exist();
                            }
                        });
                    }else{
                        $("#passwordlg,#namelg").addClass( "ui-state-error" );
                        $(".validateTips2").text( "Username and password must be correct." )
                        .addClass( "ui-state-highlight",0 );
                        setTimeout(function() {
                            $(".validateTips2").removeClass( "ui-state-highlight", 1500 );
                            $("#passwordlg,#namelg").removeClass( "ui-state-error");
                        }, 500 );
                        setTimeout(function() {
                            $(".validateTips2").html(_user_id_text);
                        },3000);
                        $("#passwordlg").val("");
                    } 
                    

                })
            },
            "Creat": function() {
                $( this ).dialog( "close" );
                $( "#dialog-creat" ).dialog( "open" );
            }
        },
        close: function() {
            loginFields.val( "" ).removeClass( "ui-state-error" );
        }
    });

    $( "#dialog-creat" ).dialog({
        hide:false,   
        resizable:false,
        autoOpen: false,//false,
        height: 'auto',//firefox:400,
        width: 350,//firefox:300,
        modal: true,//是否遮掩
        position : ['top','right'] ,
        //accessKey:"endter",
        buttons: {
            "Creat": function() {
                var bValid = true;
                loginFields.removeClass( "ui-state-error" );

                bValid = bValid && checkLength( creat_genid, "genid", 3, 16 );
                bValid = bValid && checkLength( creat_name, "name", 3, 16 );
                bValid = bValid && checkLength( creat_single, "single", 3, 16 );
                ///^[a-z]([0-9a-z_])+$/i
                //bValid = bValid && checkRegexp( creat_single, /^[a-z]([0-9a-z_])+$/i, "Username may consist of a-z, 0-9, underscores, begin with a letter." );
                // From jquery.validate.js (by joern), contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/
                //bValid = bValid && checkRegexp( creat_email, /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i, "eg. ui@jquery.com" );
                bValid = bValid && checkRegexp( creat_password, /^([0-9a-zA-Z])+$/, "Password field only allow : a-z 0-9" );

                if ( bValid ) {
                    ///格式符合后执行下面
                    $.post("method/mysql_register.php", 
                    {
                        genid:$("#genid").val(),
                        name:$("#name").val(),
                        single:$("#single").val(),
                        password:$("#password").val(),
                        pcip:$("#pcip").text()
                    },function (data){
                        alert(data);
                        _user_genid=$("#genid").val(),
                        $( this ).dialog( "close" );
                        $( "#dialog-login" ).dialog( "open" );
                        $( "#dialog-login #genidlg" ).val(_user_genid);
                    }); 
                    
                    

                }
            },
            "Login": function() {
                $( this ).dialog( "close" );
                $( "#dialog-login" ).dialog( "open" );
            }
        },
        close: function() {
            loginFields.val( "" ).removeClass( "ui-state-error" );
        }
    });
    $("#alogin").click(function(){
        $( "#dialog-login" ).dialog( "open" );
    });
    getevent(_is_exist);
    
    //设置日期
    $("#user_date").datepicker({
        //showButtonPanel: true,
        dateFormat: "yymmdd"
    });
    /*$("#user_date").change(function (){
        $("#user_start,#user_end").val($("#user_date").val());
    });*/
    //自动计算
    $("#user_start,#user_end").change(function(){
        alert($("#user_start").value);
        var user_start =parseInt($("#user_start").val());
        var user_end =parseInt($("#user_end").val());
        $("#user_hours").val(get_hours(user_start,user_end));
        $("#user_time_c,#user_time_l").val(parseInt($("#user_hours").val())/60);
    });

  
}); 
function usersub(){
  
}
//updateTips o[selector] t[string]
function updateTips( t,o ) {
    o
    .text( t )
    .addClass( "ui-state-highlight" );
    setTimeout(function() {
        o.removeClass( "ui-state-highlight", 1500 );
    }, 500 );
}

// o[selector] n[stirng(selector value)] min[num(min length)] max[num(max length)]
function checkLength( o, n, min, max ) {
    if ( o.val().length > max || o.val().length < min ) {
        o.addClass( "ui-state-error" );
        updateTips( "Length of " + n + " must be between " +
            min + " and " + max + "." ,$( ".validateTips" ));
        return false;
    } else {
        return true;
    }
}
//$( "#dialog-creat","#dialog-login" ).dialog().hide();
function checkRegexp( o, regexp, n ) {
    if ( !( regexp.test( o.val() ) ) ) {
        o.addClass( "ui-state-error" );
        updateTips( n ,$( ".validateTips" ));
        return false;
    } else {
        return true;
    }
}



function showTime(){
    var date =  new Date();
    var t= Date.parse(date);//parse是静态方法  不用创建date对象
    $("#watch").html("当前时间是："+new Date(t).toLocaleString());
    window.setTimeout(showTime,1000);
}

function get_hours(start,end){
    var hours=0;
    if(end>201200000000&&start>201200000000){
        if(parseInt(end/10000)!=parseInt(start/10000))//20121212
            return hours;
        var start1 = start%10000;//1830
        var start2 = parseInt(start1/100);//18
        var start3 = start1%100;//30
        start = start2*60+start3;//18*60+30
        var end1 = end%10000;//2000
        var end2 = parseInt(end1/100);//20
        var end3 = end1%100;//00
        end = end2*60+end3;//20*60
        hours = end - start;//90
        return hours>0?hours:0;
    }
    return hours;
}


function getevent(data){
    //设置button事件
    //$("#check").css({"margin-right":($("td").css("width")/2-$("#check").css("width"))});
    $("#check").click(
        function (){
            if(is_edit == false){
                $.post("method/read.php", 
                {
                    a:1,
                    b:2
                },function (data){
                    $("#submitdata").html(data);
                });  
            }else {
                alert("cancle;");
            }
        }
        );
    $("#submit").click(
        function (){
            if(_is_exist == false){
                if($("#user_name").val()==""||
                    $("#user_id").val()==""||
                    $("#user_date").val()==""||
                    $("#user_week").val()==""||
                    $("#user_start").val()==""||
                    $("#user_end").val()==""||
                    $("#user_hours").val()==""||
                    $("#user_reason").val()==""||
                    $("#user_time_c").val()==""||
                    $("#user_time_l").val()=="")
                    {
                    alert("表格不能为空！");
                }else {
                    $.post("method/insert.php", 
                    {
                        user1:$("#user_name").val(),
                        user2:$("#user_id").val(),
                        user3:$("#user_date").val(),
                        user4:$("#user_week").val(),
                        user5:$("#user_start").val(),
                        user6:$("#user_end").val(),
                        user7:$("#user_hours").val(),
                        user8:$("#user_reason").val(),
                        user9:$("#user_time_c").val(),
                        user10:$("#user_time_l").val()
                    },function (data){
                        $("input[type=text],textarea").val("");
                        $("#user_id").val(user_name);
                        $("#user_name").val(user_name);
                        alert("插入成功");
                        _is_exist == true;
                        data_is_exist();
                    });                 
                }
            }else{
                is_edit = true;
                data_isnot_exist();
            }
        }
        );               
  
        


}

function form_init(){
    $("#user_name").attr("value",_user_name);
    $("#user_id").attr("value",_user_singleid);
    if(_is_exist){
        
    }

}
function data_is_exist(){
    $("#check").attr("value","cancle");
    $("#submit").attr("value","edit");
}

function data_isnot_exist(){
    $("#submit").attr("value","submit");
    $("#check").attr("value","check");
}

function data_is_edit(){
    
}
function data_isnot_edit(){
    
}